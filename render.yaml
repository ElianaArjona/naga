services:
  # AIRFLOW WEB SERVER
  - type: web
    name: airflow-webserver
    env: docker
    dockerfilePath: Dockerfile.airflow
    buildCommand: ""
    envVars:
      - fromGroup: global-env

  # AIRFLOW SCHEDULER
  - type: worker
    name: airflow-scheduler
    env: docker
    dockerfilePath: Dockerfile.airflow
    buildCommand: ""
    envVars:
      - fromGroup: global-env

  # POSTGRES CONSUMER
  - type: worker
    name: postgres-consumer
    env: docker
    dockerfilePath: postgres_consumer/Dockerfile
    buildCommand: ""
    envVars:
      - fromGroup: global-env

  # CLICKHOUSE CONSUMER
  - type: worker
    name: clickhouse-consumer
    env: docker
    dockerfilePath: clickhouse_consumer/Dockerfile
    buildCommand: ""
    envVars:
      - fromGroup: global-env

  # KAFKA
  - type: worker
    name: kafka
    env: docker-image
    image:
      url: docker.io/confluentinc/cp-kafka:7.6.0
    plan: starter
    disk:
      name: kafka-data
      sizeGB: 5
      mountPath: /bitnami/kafka
    startCommand: "/etc/confluent/docker/run"
    envVars:
      - key: KAFKA_BROKER_ID
        value: "1"
      - key: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeper:2181
      - key: KAFKA_ADVERTISED_LISTENERS
        value: PLAINTEXT://kafka:9092
      - key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: PLAINTEXT:PLAINTEXT
      - key: KAFKA_INTER_BROKER_LISTENER_NAME
        value: PLAINTEXT
      - key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "1"

  # ZOOKEEPER
  - type: worker
    name: zookeeper
    env: docker-image
    image:
      url: docker.io/confluentinc/cp-zookeeper:7.6.0
    plan: starter
    disk:
      name: zookeeper-data
      sizeGB: 1
      mountPath: /bitnami/zookeeper
    startCommand: "/etc/confluent/docker/run"
    envVars:
      - key: ZOOKEEPER_CLIENT_PORT
        value: "2181"
      - key: ZOOKEEPER_TICK_TIME
        value: "2000"

  # CLICKHOUSE
  - type: worker
    name: clickhouse
    env: docker-image
    image:
      url: docker.io/clickhouse/clickhouse-server:latest
    plan: starter
    disk:
      name: clickhouse-data
      sizeGB: 5
      mountPath: /var/lib/clickhouse
    startCommand: "/entrypoint.sh"
    envVars:
      - key: CLICKHOUSE_USER
        value: default
      - key: CLICKHOUSE_PASSWORD
        value: admin
